//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

protocol AppRouterProtocol {
    
    var navigationController: GivingliNavigationController { get }
    
    /// Push module into navigation stack
    ///
    /// - Parameters:
    ///   - urn: module urn
    ///   - animated:
    ///   - completion: module completion handler
    func pushModule(byUrn urn: Any, animated: Bool, completion: ModuleCompletionHandler?)
    
    func pushModule(byUrn urn: Any, animated: Bool, isHeroEnabled : Bool, completion: ModuleCompletionHandler?)

    /// Push module on selected tabbar navigation
    ///
    /// - Parameters:
    ///   - urn: module urn
    ///   - animated:
    ///   - completion: module completion handler
//    func pushLocalModule(byUrn urn: Any, animated: Bool, completion: ModuleCompletionHandler?)
    
    /// Push module on presented navigation
    ///
    /// - Parameters:
    ///   - urn: module urn
    ///   - animated:
    ///   - completion: module completion handler
    func pushModuleOnTopNavigation(byUrn urn: Any, animated: Bool, isHeroEnabled : Bool, completion: ModuleCompletionHandler?)
    
    /// Push module on Side Menu
    ///
    /// - Parameters:
    ///   - urn: module urn
    ///   - animated:
    ///   - completion: module completion handler
    func showMainScreen(animated: Bool, completion: ModuleCompletionHandler?)
    
    func showSideMenu()
    func closeSideMenu()
    
    /// Set module as navigation stack root (and clear current)
    ///
    /// - Parameters:
    ///   - urn: module urn
    ///   - animated:
    ///   - completion: module completion handler
    func replaceViewStack(rootUrn urn: Any, animated: Bool, completion: ModuleCompletionHandler?)
    
    /// Present module on navigation stack
    ///
    /// - Parameters:
    ///   - urn: module urn
    ///   - animated:
    ///   - completion: module completion handler
    func presentModule(byUrn urn: Any, animated: Bool, completion: ModuleCompletionHandler?)
    func presentModuleWithPushAnimation (byUrn urn: Any, animated: Bool, completion: ModuleCompletionHandler?) 
    func presentNavigationModule(byUrn urn: String, animated: Bool, completion: ModuleCompletionHandler?)
    func presentViewControler(controller: UIViewController, animated: Bool)

    
    func presentModalViewController(byUrn urn: Any, animated: Bool, isHeroEnabled : Bool, completion: ModuleCompletionHandler?)
    
    /// Pop modules from navigation stack to view controller (module)
    ///
    /// - Parameters:
    ///   - controller:
    ///   - animated:
    func popToViewController(_ controller: UIViewController, animated: Bool)
    
    /// Pop top controller from navigation stack
    ///
    /// - Parameter animated:
    func popToRootController(animated: Bool)
    func popCurrentController(animated: Bool)
    
    /// Pop controller on selected tabbar navigation
    ///
    /// - Parameters:
    ///   - urn: module urn
    ///   - animated:
    ///   - completion: module completion handler
//    func popLocalModule(animated: Bool)
//    func popToRootLocalModule(animated: Bool)
    
    
    /// Pop controller on presented navigation
    ///
    /// - Parameters:
    ///   - urn: module urn
    ///   - animated:
    ///   - completion: module completion handler
    func popModuleOnTopNavigation(animated: Bool)
    
    /// Dismiss controller from navigation stack
    ///
    /// - Parameter animated:
    func dismissAllModalViewControllersAndShowEventOnTheMap (completion: (() -> Swift.Void)?) 
    
    func dismissCurrentController(animated: Bool)
    
    func dismissCurrentController(animated: Bool, completion: (() -> Swift.Void)?)
    
    func dismissCurrentControllerWithPushAnimation (animated: Bool, completion: (() -> Swift.Void)?)

}
