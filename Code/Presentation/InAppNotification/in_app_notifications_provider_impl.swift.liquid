//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

class InAppNotificationsProviderImpl {
    
    let msgTimeout = 3.0
    let errTimeout = 5.0
    
    init(withNavigation controller: GivingliNavigationController) {
        navigation = controller
    }
    
    let navigation: GivingliNavigationController
}

extension InAppNotificationsProviderImpl: InAppNotificationsProvider {
    
    func showAPIError(_ err: Error, controller: UIViewController) {
        guard let showErrorController = controller as? ShowErrorProtocol,
            let apiError = err as? APIError
            else {
                var message: String = ""
                if let bookisError = err as? ApplicationBaseError {
                    message = bookisError.errorDescription
                } else {
                    message = errorText(err: err)
                }
                showGlobalError(message: message, on: controller)
                return
        }
        
        if !showErrorController.showError(apiError) {
            showGlobalError(message: apiError.errorDescription, on: controller)
        }
    }
    
    func showGlobalMessage (_ message: String?, controller: UIViewController) {
        guard let message = message else {
            return
        }
        showGlobalError(message: message, on: controller)
    }

}

extension InAppNotificationsProviderImpl {
    
    func errorText(err: Error) -> String {
        return err.localizedDescription
    }
    
    func showGlobalError(message: String, on controller: UIViewController, with duration : Double = 3.0) {
        BottomErrorView.show(message: message, controller: controller, with : duration)
    }
    
}