{% include 'header' %}

import Foundation

enum SocialProviderType : Int {
    
    case google
    case facebook
    
}

class SocialProvider: NSObject {
    
    let router              : AppRouterProtocol!
    var hud                 : HUD!
    
    init(router: AppRouterProtocol, hud: HUD) {
        self.router = router
        self.hud = hud
        super.init()
    }
    
    func provider (for type: SocialProviderType) -> SocialProviderProtocol {
        switch type {
        case .google:
            return self.googleProvider
        case .facebook:
            return self.facebookProvider
        }
    }
    
    lazy var googleProvider : SocialProviderProtocol = {
        let provider : GoogleProviderImpl = GoogleProviderImpl.init(router: self.router, hud: self.hud)
        return provider
    }()
    
    lazy var facebookProvider : SocialProviderProtocol = {
        let provider : FacebookProviderImpl = FacebookProviderImpl.init(router: self.router, hud: self.hud)
        return provider
    }()
    
}
